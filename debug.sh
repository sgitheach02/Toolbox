#!/bin/bash

echo "üîç DIAGNOSTIC PACHA TOOLBOX"
echo "=========================="

echo ""
echo "üìä 1. Statut des conteneurs:"
docker-compose ps

echo ""
echo "üåê 2. Test de connectivit√© r√©seau:"
echo "Ping backend depuis l'h√¥te:"
curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/api/health 2>/dev/null || echo "√âCHEC"

echo ""
echo "Test direct backend:"
docker-compose exec backend curl -s http://localhost:5000/api/health 2>/dev/null || echo "Backend interne √âCHEC"

echo ""
echo "üì° 3. Ports en √©coute:"
netstat -tlnp | grep -E ":(3000|5000|8080)" || ss -tlnp | grep -E ":(3000|5000|8080)"

echo ""
echo "üê≥ 4. Logs backend (derni√®res 10 lignes):"
docker-compose logs --tail=10 backend

echo ""
echo "üîß 5. Variables d'environnement frontend:"
docker-compose exec frontend env | grep -E "(REACT_APP|NODE)"

echo ""
echo "üåç 6. Test CURL direct:"
echo "GET /api/health:"
curl -v http://localhost:5000/api/health 2>&1 | head -20

echo ""
echo "POST /api/scan/nmap:"
curl -v -X POST -H "Content-Type: application/json" \
     -d '{"target":"127.0.0.1","args":"-sn"}' \
     http://localhost:5000/api/scan/nmap 2>&1 | head -20

echo ""
echo "üîç 7. Inspection r√©seau Docker:"
docker network ls
docker network inspect pacha-toolbox_pacha-net 2>/dev/null | grep -A 10 -B 5 "Containers" || echo "R√©seau non trouv√©"

echo ""
echo "‚úÖ DIAGNOSTIC TERMIN√â"
echo "Si curl fonctionne mais pas le frontend, c'est un probl√®me CORS/JavaScript"
echo "Si curl √©choue, c'est un probl√®me de conteneur/r√©seau"