version: '3.8'

services:
  # Backend API Flask
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pacha-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - reports_data:/app/reports
      - logs_data:/app/logs
    networks:
      - pacha-network
    restart: unless-stopped

  # Frontend React
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pacha-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - pacha-network
    restart: unless-stopped

  # Base de données PostgreSQL (optionnelle pour l'instant)
  postgres:
    image: postgres:15-alpine
    container_name: pacha-postgres
    environment:
      - POSTGRES_DB=pacha_toolbox
      - POSTGRES_USER=pacha
      - POSTGRES_PASSWORD=pacha123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pacha-network
    restart: unless-stopped

  # Redis pour les tâches async (optionnel)
  redis:
    image: redis:7-alpine
    container_name: pacha-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pacha-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  reports_data:
    driver: local
  logs_data:
    driver: local

networks:
  pacha-network:
    driver: bridge