version: "3.8"
services:
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./reports:/app/reports
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - pacha-net
    environment:
      - FLASK_ENV=development
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - postgres
    privileged: true
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pacha-net
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api  # CORRECTION: Utilise localhost depuis l'hôte
    restart: unless-stopped

  # Redis pour les tâches asynchrones
  redis:
    image: redis:6-alpine
    networks:
      - pacha-net
    restart: unless-stopped

  # PostgreSQL pour OpenVAS et Metasploit
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=msf
      - POSTGRES_USER=msf
      - POSTGRES_PASSWORD=msf123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pacha-net
    restart: unless-stopped

  # OpenVAS Scanner - Version simplifiée qui fonctionne
  openvas:
    image: mikesplain/openvas:latest  # Version plus stable
    ports:
      - "9392:9392"
      - "9390:9390"
    environment:
      - OV_PASSWORD=admin123
    networks:
      - pacha-net
    restart: unless-stopped

  # Metasploit avec base de données
  metasploit:
    image: metasploitframework/metasploit-framework:latest
    depends_on:
      - postgres
    volumes:
      - ./data/metasploit:/root/.msf4
      - ./reports:/reports
    networks:
      - pacha-net
    environment:
      - DATABASE_URL=postgres://msf:msf123@postgres:5432/msf
    command: tail -f /dev/null
    restart: unless-stopped

  # Image Metasploitable pour les tests d'exploitation
  metasploitable:
    image: tleemcjr/metasploitable2
    ports:
      - "2222:22"   # SSH
      - "2121:21"   # FTP
      - "8081:80"   # HTTP
    networks:
      - pacha-net
    restart: unless-stopped

  # DVWA pour les tests
  dvwa:
    image: vulnerables/web-dvwa
    ports:
      - "8080:80"
    networks:
      - pacha-net
    restart: unless-stopped

networks:
  pacha-net:
    driver: bridge

volumes:
  postgres_data: