version: "3.8"

services:
  # Backend API principal
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./reports:/app/reports
      - ./logs:/app/logs
    networks:
      - security-net
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - REDIS_URL=redis://redis:6379/0
      - TARGET_HOST=printnightmare.thm
    depends_on:
      - redis
    restart: unless-stopped

  # Frontend React
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - security-net
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    restart: unless-stopped

  # Redis pour les tâches
  redis:
    image: redis:7-alpine
    networks:
      - security-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cible Print Nightmare (simulation)
  printnightmare:
    image: nginx:alpine
    ports:
      - "445:80"
      - "135:80"
      - "139:80"
    networks:
      security-net:
        aliases:
          - printnightmare.thm
    restart: unless-stopped
    # Simulation basique avec nginx

# Configuration réseau
networks:
  security-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16