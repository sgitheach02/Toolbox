version: '3.8'

services:
  # Backend API Flask avec outils de sécurité
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pacha-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
      - PORT=5000
    volumes:
      - ./backend:/app:rw
      - pacha_reports:/app/data/reports
      - pacha_logs:/app/data/logs
      - pacha_temp:/app/data/temp
    networks:
      - pacha-network
    restart: unless-stopped
    # Privilèges pour tcpdump et certains outils
    cap_add:
      - NET_ADMIN
      - NET_RAW
    # Healthcheck
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pacha-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - GENERATE_SOURCEMAP=false
    volumes:
      - ./frontend:/app:rw
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - pacha-network
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  pacha_reports:
    driver: local
  pacha_logs:
    driver: local
  pacha_temp:
    driver: local

networks:
  pacha-network:
    driver: bridge
    name: pacha-network
